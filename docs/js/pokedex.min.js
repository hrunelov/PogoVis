/*! PogoVis v0.0.1 | (c) 2020 Hannes RunelÃ¶v | MIT License |  */
const TYPE_COLORS={bug:"#99c32f",dark:"#656776",dragon:"#0970bb",electric:"#f7da5c",fairy:"#ffaef0",fighting:"#d5425f",fire:"#fea153",flying:"#9bb3e1",ghost:"#626dbd",grass:"#5ebe67",ground:"#d68e5e",ice:"#7cd2c7",normal:"#919aa1",poison:"#b961cf",psychic:"#fc8684",rock:"#cbbd8e",steel:"#5496a2",water:"#5eaadc"};var pokedex;class Pokedex extends JSONAssignedObject{constructor(e,t,s,o){super(e),pokedex=this;let r=[],n=[],i={fast:[],charged:[]},f=[];for(let t of e.types)n.push(new Type(t));this.types=n;for(let e of this.types)for(let t of e.effectiveness){const e=t;for(let s of this.types.filter(t=>t.key===e.defendingType))t.defendingType=s}for(let t of e.moves.fast)i.fast.push(new FastMove(t));for(let t of e.moves.charged)i.charged.push(new ChargedMove(t));this.moves=i;for(let t of e.items)f.push(Object.assign(new Item,t));this.items=f;for(let t of e.pokemon)r.push(new Pokemon(t));this.pokemon=r;for(let e of this.pokemon)for(let s of e.forms){for(let e of s.evolutions){const t=e;for(let s of this.pokemon.filter(e=>e.key===t.pokemon))for(let o of s.forms.filter(e=>e.key===t.form))e.descendant=o;delete e.pokemon,delete e.form}s.image=t.includes(s.key)?s.key:e.forms[0].key}s(1),o()}}class Type extends JSONAssignedObject{get counterEffectiveness(){let e=[];for(let t of pokedex.types)e.push({attackingType:t,damageMultiplier:t.effectiveness.find(e=>e.defendingType.key===this.key).damageMultiplier});return e}get color(){return TYPE_COLORS[this.key]}}class FastMove extends JSONAssignedObject{constructor(e){super(e),this.type=pokedex.types.find(e=>e.key===this.type)}}class ChargedMove extends JSONAssignedObject{constructor(e){super(e),this.type=pokedex.types.find(e=>e.key===this.type)}}class Item extends JSONAssignedObject{}class Pokemon extends JSONAssignedObject{constructor(e){super(e);let t=[];for(let s of e.forms){let e=new Form(s);if(e.pokemon=this,!e.description){const t=this.description;delete e.description,Object.defineProperty(e,"description",{get:()=>t})}t.push(e)}this.forms=t}}class Form extends JSONAssignedObject{constructor(e){super(e);let t=[];for(let e of this.types){const s=e;t.push(pokedex.types.find(e=>e.key===s))}this.types=t;for(let e of this.movePool.fast){const t=e;e.move=pokedex.moves.fast.find(e=>e.key===t.move)}for(let e of this.movePool.charged){const t=e;e.move=pokedex.moves.charged.find(e=>e.key===t.move)}for(let e of this.evolutions){const t=e;e.requirements.item&&(e.requirements.item=pokedex.items.find(e=>e.key===t.requirements.item))}}get counterEffectiveness(){let e=[];for(let t of pokedex.types)e.push({attackingType:t,damageMultiplier:1});for(let t of this.types)for(let s of t.counterEffectiveness){const t=s;e.find(e=>e.attackingType.key===t.attackingType.key).damageMultiplier*=t.damageMultiplier}return e}get ancestor(){for(let e of pokedex.pokemon)for(let t of e.forms)if(void 0!==t.evolutions.find(e=>e.descendant.key===this.key))return t}get firstAncestor(){let e=this;for(;void 0!==e.ancestor;e=e.ancestor);return e}sameTyping(e,t){if(this.types.length!==e.types.length)return!1;let s=this.types[0].key===e.types[0].key;return 1===this.types.length?s:s&&this.types[1].key===e.types[1].key||!t&&this.types[0].key===e.types[1].key&&this.types[1].key===e.types[0].key}}function getTypeSplitColor(e,t,s){let o=mixColors("#000",e[0].color,s);if(1==e.length)return o;{let r=mixColors("#000",e[1].color,s);return splitColor("to bottom",o,r,t)}}function getAverageBaseStats(){let e={attack:0,defense:0,stamina:0},t=0;for(let s of pokedex.pokemon)for(let o of s.forms)e.attack+=o.baseStats.attack,e.defense+=o.baseStats.defense,e.stamina+=o.baseStats.stamina,++t;return e.attack/=t,e.defense/=t,e.stamina/=t,e}